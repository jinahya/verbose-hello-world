<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.github.jinahya</groupId>
    <artifactId>verbose-hello-world</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>verbose-hello-world-srv</artifactId>
  <packaging>pom</packaging>

  <name>${project.artifactId}</name>
  <description>Verbose Hello World Server</description>

  <modules>
    <module>00-verbose-hello-world-srv-common</module>
    <module>01-verbose-hello-world-srv1</module>
    <module>02-verbose-hello-world-srv2</module>
    <module>03-verbose-hello-world-srv3</module>
    <module>04-verbose-hello-world-srv4</module>
    <!--    <module>verbose-hello-world-srv3</module>-->
    <!--    <module>verbose-hello-world-srv4</module>-->
    <!--    <module>verbose-hello-world-srv5</module>-->
    <!--    <module>verbose-hello-world-srv6</module>-->
    <!--    <module>verbose-hello-world-srv7</module>-->
  </modules>

  <properties>
    <generateArchives>true</generateArchives>
    <mainClass>com.github.jinahya.hello.HelloWorldMain</mainClass>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.jinahya</groupId>
        <artifactId>verbose-hello-world-api</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.jinahya</groupId>
        <artifactId>verbose-hello-world-lib</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!--    <dependency>-->
    <!--      <groupId>ch.qos.logback</groupId>-->
    <!--      <artifactId>logback-classic</artifactId>-->
    <!--      <scope>runtime</scope>-->
    <!--    </dependency>-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>archive</id>
      <activation>
        <property>
          <name>generateArchives</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>antrun-archive</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <target>
                    <property name="final.name" value="${project.build.directory}/${project.build.finalName}"/>
                    <property name="archive.includes"
                              value="${project.build.finalName}-manual.${project.packaging} ${project.build.finalName}-manual.lib/*"/>
                    <property name="tar.destfile" value="${final.name}-manual.tar"/>
                    <zip basedir="${project.build.directory}" destfile="${final.name}-manual.zip"
                         includes="${archive.includes}"/>
                    <tar basedir="${project.build.directory}" destfile="${tar.destfile}"
                         includes="${archive.includes}"/>
                    <gzip src="${tar.destfile}" destfile="${tar.destfile}.gz"/>
                    <bzip2 src="${tar.destfile}" destfile="${tar.destfile}.bz2"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${mainClass}</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <outputDirectory>${project.build.directory}/${project.build.finalName}-manual.lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>manual-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <classifier>manual</classifier>
                  <archive>
                    <manifest>
                      <addClasspath>true</addClasspath>
                      <classpathPrefix>${project.build.finalName}-manual.lib/</classpathPrefix>
                      <mainClass>${mainClass}</mainClass>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <shadedArtifactAttached>true</shadedArtifactAttached>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>${mainClass}</mainClass>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <classifier>spring-boot</classifier>
                  <mainClass>${mainClass}</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
